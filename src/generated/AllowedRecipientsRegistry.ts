/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from 'ethers'
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from './common'

export interface AllowedRecipientsRegistryInterface extends Interface {
  getFunction(
    nameOrSignature:
      | 'ADD_RECIPIENT_TO_ALLOWED_LIST_ROLE'
      | 'DEFAULT_ADMIN_ROLE'
      | 'REMOVE_RECIPIENT_FROM_ALLOWED_LIST_ROLE'
      | 'SET_PARAMETERS_ROLE'
      | 'UPDATE_SPENT_AMOUNT_ROLE'
      | 'addRecipient'
      | 'allowedRecipients'
      | 'bokkyPooBahsDateTimeContract'
      | 'getAllowedRecipients'
      | 'getLimitParameters'
      | 'getPeriodState'
      | 'getRoleAdmin'
      | 'grantRole'
      | 'hasRole'
      | 'isRecipientAllowed'
      | 'isUnderSpendableBalance'
      | 'removeRecipient'
      | 'renounceRole'
      | 'revokeRole'
      | 'setBokkyPooBahsDateTimeContract'
      | 'setLimitParameters'
      | 'spendableBalance'
      | 'supportsInterface'
      | 'unsafeSetSpentAmount'
      | 'updateSpentAmount'
  ): FunctionFragment

  getEvent(
    nameOrSignatureOrTopic:
      | 'BokkyPooBahsDateTimeContractChanged'
      | 'CurrentPeriodAdvanced'
      | 'LimitsParametersChanged'
      | 'RecipientAdded'
      | 'RecipientRemoved'
      | 'RoleAdminChanged'
      | 'RoleGranted'
      | 'RoleRevoked'
      | 'SpendableAmountChanged'
      | 'SpentAmountChanged'
  ): EventFragment

  encodeFunctionData(
    functionFragment: 'ADD_RECIPIENT_TO_ALLOWED_LIST_ROLE',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'DEFAULT_ADMIN_ROLE',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'REMOVE_RECIPIENT_FROM_ALLOWED_LIST_ROLE',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'SET_PARAMETERS_ROLE',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'UPDATE_SPENT_AMOUNT_ROLE',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'addRecipient',
    values: [AddressLike, string]
  ): string
  encodeFunctionData(
    functionFragment: 'allowedRecipients',
    values: [BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'bokkyPooBahsDateTimeContract',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'getAllowedRecipients',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'getLimitParameters',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'getPeriodState',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'getRoleAdmin',
    values: [BytesLike]
  ): string
  encodeFunctionData(
    functionFragment: 'grantRole',
    values: [BytesLike, AddressLike]
  ): string
  encodeFunctionData(
    functionFragment: 'hasRole',
    values: [BytesLike, AddressLike]
  ): string
  encodeFunctionData(
    functionFragment: 'isRecipientAllowed',
    values: [AddressLike]
  ): string
  encodeFunctionData(
    functionFragment: 'isUnderSpendableBalance',
    values: [BigNumberish, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'removeRecipient',
    values: [AddressLike]
  ): string
  encodeFunctionData(
    functionFragment: 'renounceRole',
    values: [BytesLike, AddressLike]
  ): string
  encodeFunctionData(
    functionFragment: 'revokeRole',
    values: [BytesLike, AddressLike]
  ): string
  encodeFunctionData(
    functionFragment: 'setBokkyPooBahsDateTimeContract',
    values: [AddressLike]
  ): string
  encodeFunctionData(
    functionFragment: 'setLimitParameters',
    values: [BigNumberish, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'spendableBalance',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'supportsInterface',
    values: [BytesLike]
  ): string
  encodeFunctionData(
    functionFragment: 'unsafeSetSpentAmount',
    values: [BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'updateSpentAmount',
    values: [BigNumberish]
  ): string

  decodeFunctionResult(
    functionFragment: 'ADD_RECIPIENT_TO_ALLOWED_LIST_ROLE',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'DEFAULT_ADMIN_ROLE',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'REMOVE_RECIPIENT_FROM_ALLOWED_LIST_ROLE',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'SET_PARAMETERS_ROLE',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'UPDATE_SPENT_AMOUNT_ROLE',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'addRecipient',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'allowedRecipients',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'bokkyPooBahsDateTimeContract',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'getAllowedRecipients',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'getLimitParameters',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'getPeriodState',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'getRoleAdmin',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'grantRole', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'hasRole', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'isRecipientAllowed',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'isUnderSpendableBalance',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'removeRecipient',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'renounceRole',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'revokeRole', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'setBokkyPooBahsDateTimeContract',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'setLimitParameters',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'spendableBalance',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'supportsInterface',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'unsafeSetSpentAmount',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'updateSpentAmount',
    data: BytesLike
  ): Result
}

export namespace BokkyPooBahsDateTimeContractChangedEvent {
  export type InputTuple = [_newAddress: AddressLike]
  export type OutputTuple = [_newAddress: string]
  export interface OutputObject {
    _newAddress: string
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>
  export type Filter = TypedDeferredTopicFilter<Event>
  export type Log = TypedEventLog<Event>
  export type LogDescription = TypedLogDescription<Event>
}

export namespace CurrentPeriodAdvancedEvent {
  export type InputTuple = [_periodStartTimestamp: BigNumberish]
  export type OutputTuple = [_periodStartTimestamp: bigint]
  export interface OutputObject {
    _periodStartTimestamp: bigint
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>
  export type Filter = TypedDeferredTopicFilter<Event>
  export type Log = TypedEventLog<Event>
  export type LogDescription = TypedLogDescription<Event>
}

export namespace LimitsParametersChangedEvent {
  export type InputTuple = [
    _limit: BigNumberish,
    _periodDurationMonths: BigNumberish
  ]
  export type OutputTuple = [_limit: bigint, _periodDurationMonths: bigint]
  export interface OutputObject {
    _limit: bigint
    _periodDurationMonths: bigint
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>
  export type Filter = TypedDeferredTopicFilter<Event>
  export type Log = TypedEventLog<Event>
  export type LogDescription = TypedLogDescription<Event>
}

export namespace RecipientAddedEvent {
  export type InputTuple = [_recipient: AddressLike, _title: string]
  export type OutputTuple = [_recipient: string, _title: string]
  export interface OutputObject {
    _recipient: string
    _title: string
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>
  export type Filter = TypedDeferredTopicFilter<Event>
  export type Log = TypedEventLog<Event>
  export type LogDescription = TypedLogDescription<Event>
}

export namespace RecipientRemovedEvent {
  export type InputTuple = [_recipient: AddressLike]
  export type OutputTuple = [_recipient: string]
  export interface OutputObject {
    _recipient: string
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>
  export type Filter = TypedDeferredTopicFilter<Event>
  export type Log = TypedEventLog<Event>
  export type LogDescription = TypedLogDescription<Event>
}

export namespace RoleAdminChangedEvent {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ]
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ]
  export interface OutputObject {
    role: string
    previousAdminRole: string
    newAdminRole: string
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>
  export type Filter = TypedDeferredTopicFilter<Event>
  export type Log = TypedEventLog<Event>
  export type LogDescription = TypedLogDescription<Event>
}

export namespace RoleGrantedEvent {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ]
  export type OutputTuple = [role: string, account: string, sender: string]
  export interface OutputObject {
    role: string
    account: string
    sender: string
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>
  export type Filter = TypedDeferredTopicFilter<Event>
  export type Log = TypedEventLog<Event>
  export type LogDescription = TypedLogDescription<Event>
}

export namespace RoleRevokedEvent {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ]
  export type OutputTuple = [role: string, account: string, sender: string]
  export interface OutputObject {
    role: string
    account: string
    sender: string
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>
  export type Filter = TypedDeferredTopicFilter<Event>
  export type Log = TypedEventLog<Event>
  export type LogDescription = TypedLogDescription<Event>
}

export namespace SpendableAmountChangedEvent {
  export type InputTuple = [
    _alreadySpentAmount: BigNumberish,
    _spendableBalance: BigNumberish,
    _periodStartTimestamp: BigNumberish,
    _periodEndTimestamp: BigNumberish
  ]
  export type OutputTuple = [
    _alreadySpentAmount: bigint,
    _spendableBalance: bigint,
    _periodStartTimestamp: bigint,
    _periodEndTimestamp: bigint
  ]
  export interface OutputObject {
    _alreadySpentAmount: bigint
    _spendableBalance: bigint
    _periodStartTimestamp: bigint
    _periodEndTimestamp: bigint
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>
  export type Filter = TypedDeferredTopicFilter<Event>
  export type Log = TypedEventLog<Event>
  export type LogDescription = TypedLogDescription<Event>
}

export namespace SpentAmountChangedEvent {
  export type InputTuple = [_newSpentAmount: BigNumberish]
  export type OutputTuple = [_newSpentAmount: bigint]
  export interface OutputObject {
    _newSpentAmount: bigint
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>
  export type Filter = TypedDeferredTopicFilter<Event>
  export type Log = TypedEventLog<Event>
  export type LogDescription = TypedLogDescription<Event>
}

export interface AllowedRecipientsRegistry extends BaseContract {
  connect(runner?: ContractRunner | null): AllowedRecipientsRegistry
  waitForDeployment(): Promise<this>

  interface: AllowedRecipientsRegistryInterface

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>
  listeners(eventName?: string): Promise<Array<Listener>>
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>

  ADD_RECIPIENT_TO_ALLOWED_LIST_ROLE: TypedContractMethod<[], [string], 'view'>

  DEFAULT_ADMIN_ROLE: TypedContractMethod<[], [string], 'view'>

  REMOVE_RECIPIENT_FROM_ALLOWED_LIST_ROLE: TypedContractMethod<
    [],
    [string],
    'view'
  >

  SET_PARAMETERS_ROLE: TypedContractMethod<[], [string], 'view'>

  UPDATE_SPENT_AMOUNT_ROLE: TypedContractMethod<[], [string], 'view'>

  addRecipient: TypedContractMethod<
    [_recipient: AddressLike, _title: string],
    [void],
    'nonpayable'
  >

  allowedRecipients: TypedContractMethod<[arg0: BigNumberish], [string], 'view'>

  bokkyPooBahsDateTimeContract: TypedContractMethod<[], [string], 'view'>

  getAllowedRecipients: TypedContractMethod<[], [string[]], 'view'>

  getLimitParameters: TypedContractMethod<[], [[bigint, bigint]], 'view'>

  getPeriodState: TypedContractMethod<
    [],
    [
      [bigint, bigint, bigint, bigint] & {
        _alreadySpentAmount: bigint
        _spendableBalanceInPeriod: bigint
        _periodStartTimestamp: bigint
        _periodEndTimestamp: bigint
      }
    ],
    'view'
  >

  getRoleAdmin: TypedContractMethod<[role: BytesLike], [string], 'view'>

  grantRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    'nonpayable'
  >

  hasRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    'view'
  >

  isRecipientAllowed: TypedContractMethod<
    [_recipient: AddressLike],
    [boolean],
    'view'
  >

  isUnderSpendableBalance: TypedContractMethod<
    [_payoutAmount: BigNumberish, _motionDuration: BigNumberish],
    [boolean],
    'view'
  >

  removeRecipient: TypedContractMethod<
    [_recipient: AddressLike],
    [void],
    'nonpayable'
  >

  renounceRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    'nonpayable'
  >

  revokeRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    'nonpayable'
  >

  setBokkyPooBahsDateTimeContract: TypedContractMethod<
    [_bokkyPooBahsDateTimeContract: AddressLike],
    [void],
    'nonpayable'
  >

  setLimitParameters: TypedContractMethod<
    [_limit: BigNumberish, _periodDurationMonths: BigNumberish],
    [void],
    'nonpayable'
  >

  spendableBalance: TypedContractMethod<[], [bigint], 'view'>

  supportsInterface: TypedContractMethod<
    [interfaceId: BytesLike],
    [boolean],
    'view'
  >

  unsafeSetSpentAmount: TypedContractMethod<
    [_newSpentAmount: BigNumberish],
    [void],
    'nonpayable'
  >

  updateSpentAmount: TypedContractMethod<
    [_payoutAmount: BigNumberish],
    [void],
    'nonpayable'
  >

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T

  getFunction(
    nameOrSignature: 'ADD_RECIPIENT_TO_ALLOWED_LIST_ROLE'
  ): TypedContractMethod<[], [string], 'view'>
  getFunction(
    nameOrSignature: 'DEFAULT_ADMIN_ROLE'
  ): TypedContractMethod<[], [string], 'view'>
  getFunction(
    nameOrSignature: 'REMOVE_RECIPIENT_FROM_ALLOWED_LIST_ROLE'
  ): TypedContractMethod<[], [string], 'view'>
  getFunction(
    nameOrSignature: 'SET_PARAMETERS_ROLE'
  ): TypedContractMethod<[], [string], 'view'>
  getFunction(
    nameOrSignature: 'UPDATE_SPENT_AMOUNT_ROLE'
  ): TypedContractMethod<[], [string], 'view'>
  getFunction(
    nameOrSignature: 'addRecipient'
  ): TypedContractMethod<
    [_recipient: AddressLike, _title: string],
    [void],
    'nonpayable'
  >
  getFunction(
    nameOrSignature: 'allowedRecipients'
  ): TypedContractMethod<[arg0: BigNumberish], [string], 'view'>
  getFunction(
    nameOrSignature: 'bokkyPooBahsDateTimeContract'
  ): TypedContractMethod<[], [string], 'view'>
  getFunction(
    nameOrSignature: 'getAllowedRecipients'
  ): TypedContractMethod<[], [string[]], 'view'>
  getFunction(
    nameOrSignature: 'getLimitParameters'
  ): TypedContractMethod<[], [[bigint, bigint]], 'view'>
  getFunction(nameOrSignature: 'getPeriodState'): TypedContractMethod<
    [],
    [
      [bigint, bigint, bigint, bigint] & {
        _alreadySpentAmount: bigint
        _spendableBalanceInPeriod: bigint
        _periodStartTimestamp: bigint
        _periodEndTimestamp: bigint
      }
    ],
    'view'
  >
  getFunction(
    nameOrSignature: 'getRoleAdmin'
  ): TypedContractMethod<[role: BytesLike], [string], 'view'>
  getFunction(
    nameOrSignature: 'grantRole'
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    'nonpayable'
  >
  getFunction(
    nameOrSignature: 'hasRole'
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    'view'
  >
  getFunction(
    nameOrSignature: 'isRecipientAllowed'
  ): TypedContractMethod<[_recipient: AddressLike], [boolean], 'view'>
  getFunction(
    nameOrSignature: 'isUnderSpendableBalance'
  ): TypedContractMethod<
    [_payoutAmount: BigNumberish, _motionDuration: BigNumberish],
    [boolean],
    'view'
  >
  getFunction(
    nameOrSignature: 'removeRecipient'
  ): TypedContractMethod<[_recipient: AddressLike], [void], 'nonpayable'>
  getFunction(
    nameOrSignature: 'renounceRole'
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    'nonpayable'
  >
  getFunction(
    nameOrSignature: 'revokeRole'
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    'nonpayable'
  >
  getFunction(
    nameOrSignature: 'setBokkyPooBahsDateTimeContract'
  ): TypedContractMethod<
    [_bokkyPooBahsDateTimeContract: AddressLike],
    [void],
    'nonpayable'
  >
  getFunction(
    nameOrSignature: 'setLimitParameters'
  ): TypedContractMethod<
    [_limit: BigNumberish, _periodDurationMonths: BigNumberish],
    [void],
    'nonpayable'
  >
  getFunction(
    nameOrSignature: 'spendableBalance'
  ): TypedContractMethod<[], [bigint], 'view'>
  getFunction(
    nameOrSignature: 'supportsInterface'
  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], 'view'>
  getFunction(
    nameOrSignature: 'unsafeSetSpentAmount'
  ): TypedContractMethod<[_newSpentAmount: BigNumberish], [void], 'nonpayable'>
  getFunction(
    nameOrSignature: 'updateSpentAmount'
  ): TypedContractMethod<[_payoutAmount: BigNumberish], [void], 'nonpayable'>

  getEvent(
    key: 'BokkyPooBahsDateTimeContractChanged'
  ): TypedContractEvent<
    BokkyPooBahsDateTimeContractChangedEvent.InputTuple,
    BokkyPooBahsDateTimeContractChangedEvent.OutputTuple,
    BokkyPooBahsDateTimeContractChangedEvent.OutputObject
  >
  getEvent(
    key: 'CurrentPeriodAdvanced'
  ): TypedContractEvent<
    CurrentPeriodAdvancedEvent.InputTuple,
    CurrentPeriodAdvancedEvent.OutputTuple,
    CurrentPeriodAdvancedEvent.OutputObject
  >
  getEvent(
    key: 'LimitsParametersChanged'
  ): TypedContractEvent<
    LimitsParametersChangedEvent.InputTuple,
    LimitsParametersChangedEvent.OutputTuple,
    LimitsParametersChangedEvent.OutputObject
  >
  getEvent(
    key: 'RecipientAdded'
  ): TypedContractEvent<
    RecipientAddedEvent.InputTuple,
    RecipientAddedEvent.OutputTuple,
    RecipientAddedEvent.OutputObject
  >
  getEvent(
    key: 'RecipientRemoved'
  ): TypedContractEvent<
    RecipientRemovedEvent.InputTuple,
    RecipientRemovedEvent.OutputTuple,
    RecipientRemovedEvent.OutputObject
  >
  getEvent(
    key: 'RoleAdminChanged'
  ): TypedContractEvent<
    RoleAdminChangedEvent.InputTuple,
    RoleAdminChangedEvent.OutputTuple,
    RoleAdminChangedEvent.OutputObject
  >
  getEvent(
    key: 'RoleGranted'
  ): TypedContractEvent<
    RoleGrantedEvent.InputTuple,
    RoleGrantedEvent.OutputTuple,
    RoleGrantedEvent.OutputObject
  >
  getEvent(
    key: 'RoleRevoked'
  ): TypedContractEvent<
    RoleRevokedEvent.InputTuple,
    RoleRevokedEvent.OutputTuple,
    RoleRevokedEvent.OutputObject
  >
  getEvent(
    key: 'SpendableAmountChanged'
  ): TypedContractEvent<
    SpendableAmountChangedEvent.InputTuple,
    SpendableAmountChangedEvent.OutputTuple,
    SpendableAmountChangedEvent.OutputObject
  >
  getEvent(
    key: 'SpentAmountChanged'
  ): TypedContractEvent<
    SpentAmountChangedEvent.InputTuple,
    SpentAmountChangedEvent.OutputTuple,
    SpentAmountChangedEvent.OutputObject
  >

  filters: {
    'BokkyPooBahsDateTimeContractChanged(address)': TypedContractEvent<
      BokkyPooBahsDateTimeContractChangedEvent.InputTuple,
      BokkyPooBahsDateTimeContractChangedEvent.OutputTuple,
      BokkyPooBahsDateTimeContractChangedEvent.OutputObject
    >
    BokkyPooBahsDateTimeContractChanged: TypedContractEvent<
      BokkyPooBahsDateTimeContractChangedEvent.InputTuple,
      BokkyPooBahsDateTimeContractChangedEvent.OutputTuple,
      BokkyPooBahsDateTimeContractChangedEvent.OutputObject
    >

    'CurrentPeriodAdvanced(uint256)': TypedContractEvent<
      CurrentPeriodAdvancedEvent.InputTuple,
      CurrentPeriodAdvancedEvent.OutputTuple,
      CurrentPeriodAdvancedEvent.OutputObject
    >
    CurrentPeriodAdvanced: TypedContractEvent<
      CurrentPeriodAdvancedEvent.InputTuple,
      CurrentPeriodAdvancedEvent.OutputTuple,
      CurrentPeriodAdvancedEvent.OutputObject
    >

    'LimitsParametersChanged(uint256,uint256)': TypedContractEvent<
      LimitsParametersChangedEvent.InputTuple,
      LimitsParametersChangedEvent.OutputTuple,
      LimitsParametersChangedEvent.OutputObject
    >
    LimitsParametersChanged: TypedContractEvent<
      LimitsParametersChangedEvent.InputTuple,
      LimitsParametersChangedEvent.OutputTuple,
      LimitsParametersChangedEvent.OutputObject
    >

    'RecipientAdded(address,string)': TypedContractEvent<
      RecipientAddedEvent.InputTuple,
      RecipientAddedEvent.OutputTuple,
      RecipientAddedEvent.OutputObject
    >
    RecipientAdded: TypedContractEvent<
      RecipientAddedEvent.InputTuple,
      RecipientAddedEvent.OutputTuple,
      RecipientAddedEvent.OutputObject
    >

    'RecipientRemoved(address)': TypedContractEvent<
      RecipientRemovedEvent.InputTuple,
      RecipientRemovedEvent.OutputTuple,
      RecipientRemovedEvent.OutputObject
    >
    RecipientRemoved: TypedContractEvent<
      RecipientRemovedEvent.InputTuple,
      RecipientRemovedEvent.OutputTuple,
      RecipientRemovedEvent.OutputObject
    >

    'RoleAdminChanged(bytes32,bytes32,bytes32)': TypedContractEvent<
      RoleAdminChangedEvent.InputTuple,
      RoleAdminChangedEvent.OutputTuple,
      RoleAdminChangedEvent.OutputObject
    >
    RoleAdminChanged: TypedContractEvent<
      RoleAdminChangedEvent.InputTuple,
      RoleAdminChangedEvent.OutputTuple,
      RoleAdminChangedEvent.OutputObject
    >

    'RoleGranted(bytes32,address,address)': TypedContractEvent<
      RoleGrantedEvent.InputTuple,
      RoleGrantedEvent.OutputTuple,
      RoleGrantedEvent.OutputObject
    >
    RoleGranted: TypedContractEvent<
      RoleGrantedEvent.InputTuple,
      RoleGrantedEvent.OutputTuple,
      RoleGrantedEvent.OutputObject
    >

    'RoleRevoked(bytes32,address,address)': TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >
    RoleRevoked: TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >

    'SpendableAmountChanged(uint256,uint256,uint256,uint256)': TypedContractEvent<
      SpendableAmountChangedEvent.InputTuple,
      SpendableAmountChangedEvent.OutputTuple,
      SpendableAmountChangedEvent.OutputObject
    >
    SpendableAmountChanged: TypedContractEvent<
      SpendableAmountChangedEvent.InputTuple,
      SpendableAmountChangedEvent.OutputTuple,
      SpendableAmountChangedEvent.OutputObject
    >

    'SpentAmountChanged(uint256)': TypedContractEvent<
      SpentAmountChangedEvent.InputTuple,
      SpentAmountChangedEvent.OutputTuple,
      SpentAmountChangedEvent.OutputObject
    >
    SpentAmountChanged: TypedContractEvent<
      SpentAmountChangedEvent.InputTuple,
      SpentAmountChangedEvent.OutputTuple,
      SpentAmountChangedEvent.OutputObject
    >
  }
}
